#!/bin/bash -l

# Set SCC project
#$ -P llamagrp

# Specify hard time limit for the job.
#   The job will be aborted if it runs longer than this time.
#   The default time is 12 hours
#$ -l h_rt=12:00:00

# Send an email when the job finishes or if it is aborted (by default no email is sent).
####$ -m ea

# Give job a name
#$ -N ax-fs

# Combine output and error files into a single file
#$ -j y
#$ -o log

# request 6 cores, each with 6 GB RAM at least
#$ -pe omp 4
###$ -l mem_per_core=6G

# request 1 GPU
#$ -l gpus=1
#$ -l gpu_c=8.0
##### GPU compatibility >=8.0 supports bf16
#####$ -l gpu_type=V100
#$ -l gpu_memory=47G

# Submit an array job with 5 tasks
#$ -t 1-11


# Keep track of information related to the current job
echo "=========================================================="
echo "Start date : $(date)"
echo "Job name : $JOB_NAME"
echo "Job ID : $JOB_ID  $SGE_TASK_ID"
echo "=========================================================="
nvidia-smi

# Transformer version == 4.34.0 (earliest for mistral), later ones cause issue with tyro lib in trl
# ============= Adjust environment below for your needs =================
module load cuda/12.2
module load torch/2.1
conda activate <your environment>
ROOT=$(pwd)
export PYTHONPATH=$PYTHONPATH:$ROOT/sampling
export PYTHONPATH=$PYTHONPATH:$ROOT/alignment-handbook-mirror/src
export HF_HOME="<your hf cache dir>"
huggingface-cli login --token <your_hf_token>
# =======================================================================
index=$(($SGE_TASK_ID-1))

CVS=("sports" "diet" "politics" "religion" "age" "profession" "geographical_location" "gender" "education_level" "ai_professors" "family_marriage_status")
CV=${CVS[$index]}

MAIN_PORT=$(( RANDOM % (50000 - 30000 + 1 ) + 30000 ))
GROUP_DIR="one_model_for_all_cv_axis"

PREFIX_FIELD="xyw_2s"  # xyw_2s, persona_gold_gpt4, persona_xy_4s, tag, persona_xy_4s_gpt4, name
DATA_PREFIX_TAG="_${PREFIX_FIELD}-name-prefixed"
MAX_LEN=2500
MAX_PROMPT_LEN=$(( $MAX_LEN - 512 ))

# for 50 people
FIFTY_NAMES=("halleberry" "donaldtrump" "berniesanders" "jenniferaniston" "alexandriaocasio-cortez" "joebiden" "gwynethpaltrow" "meganfox" "randpaul" "ellendegeneres" "barackobama" "beyoncé" "billclinton" "billieeilish" "chazbono" "danielradcliffe" "davidbeckham" "elonmusk" "eltonjohn" "gordonramsey" "j.k.rowling" "jeffbezos" "joelosteen" "latanyasweeney" "lavernecox" "lebronjames" "mayimbialik" "merylstreep" "miketrout" "milliebobbybrown" "neildegrassetyson" "oprahwinfrey" "princeharry" "queenelizabethii" "quentintarantino" "richarddawkins" "richardgere" "robertdeniro" "samsmith" "sebastianthrun" "serenawilliams" "sherylsandberg" "sirianmckellen" "suchisaria" "taylorswift" "tigerwoods" "timnitgebru" "tombrady" "yoshuabengio" "zaynmalik")

# leave-one-axis out analysis
declare -A CV_META_TEST_NAME=(
# sports
["sports"]='princeharry berniesanders ellendegeneres gwynethpaltrow meganfox jenniferaniston halleberry elonmusk donaldtrump randpaul alexandriaocasio-cortez joebiden joelosteen richarddawkins mayimbialik richardgere zaynmalik milliebobbybrown billieeilish barackobama sirianmckellen merylstreep eltonjohn tombrady j.k.rowling robertdeniro oprahwinfrey beyoncé danielradcliffe samsmith lavernecox chazbono neildegrassetyson quentintarantino gordonramsey sherylsandberg billclinton taylorswift timnitgebru suchisaria yoshuabengio latanyasweeney sebastianthrun jeffbezos queenelizabethii'
# age
["age"]='lebronjames serenawilliams davidbeckham tigerwoods miketrout princeharry berniesanders ellendegeneres gwynethpaltrow meganfox jenniferaniston halleberry elonmusk donaldtrump randpaul alexandriaocasio-cortez joebiden joelosteen richarddawkins mayimbialik richardgere zaynmalik merylstreep eltonjohn tombrady j.k.rowling robertdeniro oprahwinfrey beyoncé danielradcliffe samsmith lavernecox chazbono neildegrassetyson quentintarantino gordonramsey sherylsandberg billclinton taylorswift timnitgebru suchisaria yoshuabengio latanyasweeney sebastianthrun jeffbezos queenelizabethii'
# geo
["geographical_location"]='lebronjames serenawilliams davidbeckham tigerwoods miketrout princeharry berniesanders ellendegeneres gwynethpaltrow meganfox jenniferaniston halleberry donaldtrump randpaul alexandriaocasio-cortez joebiden joelosteen richarddawkins mayimbialik richardgere zaynmalik milliebobbybrown billieeilish barackobama sirianmckellen merylstreep eltonjohn tombrady j.k.rowling samsmith lavernecox chazbono neildegrassetyson quentintarantino gordonramsey sherylsandberg billclinton taylorswift timnitgebru suchisaria yoshuabengio latanyasweeney sebastianthrun jeffbezos queenelizabethii'
# gender
["gender"]='lebronjames serenawilliams davidbeckham tigerwoods miketrout princeharry berniesanders ellendegeneres gwynethpaltrow meganfox jenniferaniston halleberry elonmusk donaldtrump randpaul alexandriaocasio-cortez joebiden joelosteen richarddawkins mayimbialik richardgere zaynmalik milliebobbybrown billieeilish sirianmckellen merylstreep eltonjohn tombrady j.k.rowling robertdeniro beyoncé danielradcliffe neildegrassetyson quentintarantino gordonramsey sherylsandberg billclinton taylorswift timnitgebru suchisaria yoshuabengio latanyasweeney sebastianthrun jeffbezos queenelizabethii'
# politics
["politics"]='lebronjames serenawilliams davidbeckham tigerwoods miketrout princeharry ellendegeneres gwynethpaltrow meganfox jenniferaniston halleberry elonmusk joelosteen richarddawkins mayimbialik richardgere zaynmalik milliebobbybrown billieeilish barackobama sirianmckellen merylstreep eltonjohn tombrady j.k.rowling robertdeniro oprahwinfrey beyoncé danielradcliffe samsmith lavernecox chazbono neildegrassetyson quentintarantino gordonramsey sherylsandberg billclinton taylorswift timnitgebru suchisaria yoshuabengio latanyasweeney sebastianthrun jeffbezos queenelizabethii'
# diet
["diet"]='lebronjames serenawilliams davidbeckham tigerwoods miketrout princeharry berniesanders elonmusk donaldtrump randpaul alexandriaocasio-cortez joebiden joelosteen richarddawkins mayimbialik richardgere zaynmalik milliebobbybrown billieeilish barackobama sirianmckellen merylstreep eltonjohn tombrady j.k.rowling robertdeniro oprahwinfrey beyoncé danielradcliffe samsmith lavernecox chazbono neildegrassetyson quentintarantino gordonramsey sherylsandberg billclinton taylorswift timnitgebru suchisaria yoshuabengio latanyasweeney sebastianthrun jeffbezos queenelizabethii'
# religion
["religion"]='lebronjames serenawilliams davidbeckham tigerwoods miketrout princeharry berniesanders ellendegeneres gwynethpaltrow meganfox jenniferaniston halleberry elonmusk donaldtrump randpaul alexandriaocasio-cortez joebiden milliebobbybrown billieeilish barackobama sirianmckellen merylstreep eltonjohn tombrady j.k.rowling robertdeniro oprahwinfrey beyoncé danielradcliffe samsmith lavernecox chazbono neildegrassetyson quentintarantino gordonramsey sherylsandberg billclinton taylorswift timnitgebru suchisaria yoshuabengio latanyasweeney sebastianthrun jeffbezos queenelizabethii'
# profession
["profession"]='lebronjames serenawilliams davidbeckham tigerwoods miketrout princeharry berniesanders ellendegeneres gwynethpaltrow meganfox jenniferaniston halleberry donaldtrump randpaul alexandriaocasio-cortez joebiden joelosteen richarddawkins mayimbialik richardgere zaynmalik milliebobbybrown billieeilish barackobama sirianmckellen robertdeniro oprahwinfrey beyoncé danielradcliffe samsmith lavernecox chazbono neildegrassetyson quentintarantino gordonramsey sherylsandberg billclinton taylorswift timnitgebru suchisaria yoshuabengio latanyasweeney sebastianthrun jeffbezos queenelizabethii'
# education level
["education_level"]='lebronjames serenawilliams davidbeckham tigerwoods miketrout princeharry berniesanders ellendegeneres gwynethpaltrow meganfox jenniferaniston halleberry elonmusk donaldtrump randpaul alexandriaocasio-cortez joebiden joelosteen richarddawkins mayimbialik richardgere zaynmalik milliebobbybrown billieeilish barackobama sirianmckellen merylstreep eltonjohn tombrady j.k.rowling robertdeniro oprahwinfrey beyoncé danielradcliffe samsmith lavernecox chazbono taylorswift timnitgebru suchisaria yoshuabengio latanyasweeney sebastianthrun jeffbezos queenelizabethii'
# AI professors
["ai_professors"]='lebronjames serenawilliams davidbeckham tigerwoods miketrout princeharry berniesanders ellendegeneres gwynethpaltrow meganfox jenniferaniston halleberry elonmusk donaldtrump randpaul alexandriaocasio-cortez joebiden joelosteen richarddawkins mayimbialik richardgere zaynmalik milliebobbybrown billieeilish barackobama sirianmckellen merylstreep eltonjohn tombrady j.k.rowling robertdeniro oprahwinfrey beyoncé danielradcliffe samsmith lavernecox chazbono neildegrassetyson quentintarantino gordonramsey sherylsandberg billclinton taylorswift jeffbezos queenelizabethii'
# family marriage status
["family_marriage_status"]='lebronjames serenawilliams davidbeckham tigerwoods miketrout berniesanders ellendegeneres gwynethpaltrow meganfox jenniferaniston halleberry elonmusk donaldtrump randpaul alexandriaocasio-cortez joebiden joelosteen richarddawkins mayimbialik richardgere zaynmalik milliebobbybrown billieeilish sirianmckellen merylstreep eltonjohn tombrady j.k.rowling robertdeniro oprahwinfrey beyoncé danielradcliffe samsmith lavernecox chazbono neildegrassetyson quentintarantino gordonramsey sherylsandberg billclinton timnitgebru suchisaria yoshuabengio latanyasweeney sebastianthrun'
)
EXP_OUT_DIR="pp-50-final"
DATA_DIR="${ROOT}/data/pp-50-final/50p_200d_total_50r_tem2.0_top0.8_cot_filtered20m4k_yl-random_cot_annotated_self-yl${DATA_PREFIX_TAG}"
EPOCH=2
LR='5e-5'

declare -a TRAIN_NAMES=(${CV_META_TEST_NAME[$CV]})
cd alignment-handbook-mirror

RUNNAME="overton_${PREFIX_FIELD}_cv_axis${CV}"
echo "TRAIN_NAMES(CV=${CV})= ${TRAIN_NAMES[@]}"
echo "OUTPUT PATH= ../dump/${EXP_OUT_DIR}/${GROUP_DIR}/${RUNNAME}"

# meta train / eval
echo "Starting meta train on cv${CV}..."
ACCELERATE_LOG_LEVEL=info accelerate launch \
  --config_file recipes/accelerate_configs/multi_gpu.yaml \
  --num_processes=1 \
  --main_process_port=$MAIN_PORT \
  scripts/run_dpo.py \
    recipes/mistral-7b-ours/dpo/config_qlora.yaml \
    --report_to=wandb \
    --hub_model_id=$RUNNAME \
    --run_name=$RUNNAME \
    --output_dir="../dump/${EXP_OUT_DIR}/${GROUP_DIR}/${RUNNAME}" \
    --dataset_mixer='{"'$DATA_DIR'/cv'$CV'":1.0}' \
    --dataset_splits="train_meta_prefs.json,test_meta_prefs.json" \
    --per_device_train_batch_size=1 \
    --gradient_accumulation_steps=40 \
    --max_length=$MAX_LEN \
    --max_prompt_length=$MAX_PROMPT_LEN \
    --eval_steps=10 \
    --save_steps=10 \
    --combine_eval_splits=true \
    --metric_for_best_model="eval_rewards/accuracies" \
    --num_train_epochs=$EPOCH \
    --save_total_limit=2 \
    --max_eval_data=200 \
    --load_best_model_at_end=true \
    --learning_rate="${LR}" \
    --beta=0.01


cd $ROOT/reward-bench
for NAME in "${FIFTY_NAMES[@]}"
do
    echo "Starting inferencing on individual personas ${NAME} (cv=${CV})..."
    if [[ ${TRAIN_NAMES[@]} =~ $NAME ]]
    then
      echo "${NAME} in train names, in-domain!"
      EVAL_DIR="${ROOT}/dump/${EXP_OUT_DIR}/${GROUP_DIR}/${RUNNAME}/eval/${NAME}"
    else
      echo "${NAME} not in train names, out-of-domain!"
      EVAL_DIR="${ROOT}/dump/${EXP_OUT_DIR}/${GROUP_DIR}/${RUNNAME}/eval_OOD/${NAME}"
    fi

    MODEL_DIR="${ROOT}/dump/${EXP_OUT_DIR}/${GROUP_DIR}/${RUNNAME}"
    mkdir -p "${EVAL_DIR}"
    PREFIX=$(python ../data/pp-50-final/get_persona_prefix.py --name $NAME --field $PREFIX_FIELD)

    echo "========================================"
    echo "Evaluating prefix ${PREFIX_FIELD} for ${NAME}"
    echo "the prefix for ${NAME} is the following:"
    echo "${PREFIX}"
    echo "========================================"
    NO_PREFIX_DATA_DIR="${ROOT}/data/pp-50-final/50p_200d_total_50r_tem2.0_top0.8_cot_filtered20m4k_yl-random_cot_annotated_self-yl"

#    # reference free (to compare against prompt based methods)
    echo "Evaluating common preferences"
    python scripts/run_dpo.py \
      --model="${MODEL_DIR}" \
      --batch_size=8 \
      --dataset="${DATA_DIR}/test_${NAME}_common_prefs.json" \
      --output_dir="${EVAL_DIR}" \
      --load_json \
      --ref_free_type avg

    echo "Evaluating personal preferences"
    python scripts/run_dpo.py \
      --model="${MODEL_DIR}" \
      --batch_size=8 \
      --dataset="${DATA_DIR}/test_${NAME}_personal_prefs.json" \
      --output_dir="${EVAL_DIR}" \
      --load_json \
      --ref_free_type avg
done







